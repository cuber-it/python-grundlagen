# ~/.bashrc: executed by bash(1) for non-login shells.
# see /usr/share/doc/bash/examples/startup-files (in the package bash-doc)
# for examples

# If not running interactively, don't do anything
case $- in
    *i*) ;;
      *) return;;
esac

# don't put duplicate lines or lines starting with space in the history.
# See bash(1) for more options
HISTCONTROL=ignoreboth

# append to the history file, don't overwrite it
shopt -s histappend

# for setting history length see HISTSIZE and HISTFILESIZE in bash(1)
HISTSIZE=1000
HISTFILESIZE=2000

# check the window size after each command and, if necessary,
# update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# match all files and zero or more directories and subdirectories.
#shopt -s globstar

# make less more friendly for non-text input files, see lesspipe(1)
[ -x /usr/bin/lesspipe ] && eval "$(SHELL=/bin/sh lesspipe)"

# set variable identifying the chroot you work in (used in the prompt below)
if [ -z "${debian_chroot:-}" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# set a fancy prompt (non-color, unless we know we "want" color)
case "$TERM" in
    xterm-color|*-256color) color_prompt=yes;;
esac

# uncomment for a colored prompt, if the terminal has the capability; turned
# off by default to not distract the user: the focus in a terminal window
# should be on the output of commands, not on the prompt
#force_color_prompt=yes

if [ -n "$force_color_prompt" ]; then
    if [ -x /usr/bin/tput ] && tput setaf 1 >&/dev/null; then
	# We have color support; assume it's compliant with Ecma-48
	# (ISO/IEC-6429). (Lack of such support is extremely rare, and such
	# a case would tend to support setf rather than setaf.)
	color_prompt=yes
    else
	color_prompt=
    fi
fi

if [ "$color_prompt" = yes ]; then
    PS1='${debian_chroot:+($debian_chroot)}\[\033[01;32m\]\u@\h\[\033[00m\]:\[\033[01;34m\]\w\[\033[00m\]\$ '
else
    PS1='${debian_chroot:+($debian_chroot)}\u@\h:\w\$ '
fi
unset color_prompt force_color_prompt

# If this is an xterm set the title to user@host:dir
case "$TERM" in
xterm*|rxvt*)
    PS1="\[\e]0;${debian_chroot:+($debian_chroot)}\u@\h: \w\a\]$PS1"
    ;;
*)
    ;;
esac

# colored GCC warnings and errors
#export GCC_COLORS='error=01;31:warning=01;35:note=01;36:caret=01;32:locus=01:quote=01'

# enable programmable completion features (you don't need to enable
# this, if it's already enabled in /etc/bash.bashrc and /etc/profile
# sources /etc/bash.bashrc).
if ! shopt -oq posix; then
  if [ -f /usr/share/bash-completion/bash_completion ]; then
    . /usr/share/bash-completion/bash_completion
  elif [ -f /etc/bash_completion ]; then
    . /etc/bash_completion
  fi
fi

export NVM_DIR="$HOME/.nvm"
[ -s "$NVM_DIR/nvm.sh" ] && \. "$NVM_DIR/nvm.sh"  # This loads nvm
[ -s "$NVM_DIR/bash_completion" ] && \. "$NVM_DIR/bash_completion"  # This loads nvm bash_completion

# Docker Client - strange!
#export DOCKER_HOST=unix:///var/run/docker.sock

# I Prefer my prompt simple
PS1="$ "

# Homes
export ECLIPSE_HOME=/opt/eclipse/eclipse
#export JAVA_HOME=$(dirname $(dirname $(readlink -f /etc/alternatives/java)))
export JAVA_HOME=/opt/android-studio/jbr
export ANDROIDSTUDIO_HOME=/opt/android-studio
export FLUTTER_HOME=$HOME/flutter/3.27.1
export ANDROID_HOME=$HOME/Android/Sdk
export GO_HOME=/usr/local/go/

# Paths
PATH=$PATH:$HOME/bin
PATH=$PATH:$HOME/bin/tools
PATH=$PATH:$JAVA_HOME/bin
PATH=$PATH:$ANDROIDSTUDIO_HOME/bin
PATH=$PATH:$FLUTTER_HOME/bin
PATH=$PATH:$ANDROID_HOME/platform-tools
PATH=$PATH:$GO_HOME/bin
PATH="/home/ucuber/perl5/bin${PATH:+:${PATH}}"; export PATH;

export KURSROOT=$HOME/Workspace/kurse
export UCUBERROOT=$HOME/Workspace/ucuber
# export PYTHONPATH=$UCUBERROOT/pythonlibs
# Project Libs
export PROJECTROOT=$HOME/Workspace/projects/wtfoxtrot/lottohelden/backend
export KURSROOT=$HOME/Workspace/kurse
export PERL5LIB=$PERL5LIB:$PROJECTROOT/server/lib/
export LOG_ERROR_TO_CONSOLE=1
export MAIN_INI_FILE=t/fixtures/main.ini
export CONFIG_PATH=$PROJECTROOT/base/config
export TESTROOT=$PROJECTROOT/t/unit

PATH=$PATH:$PROJECTROOT/server/scripts
# CPAN
PERL5LIB="/home/ucuber/perl5/lib/perl5${PERL5LIB:+:${PERL5LIB}}"; export PERL5LIB;
PERL_LOCAL_LIB_ROOT="/home/ucuber/perl5${PERL_LOCAL_LIB_ROOT:+:${PERL_LOCAL_LIB_ROOT}}"; export PERL_LOCAL_LIB_ROOT;
PERL_MB_OPT="--install_base \"/home/ucuber/perl5\""; export PERL_MB_OPT;
PERL_MM_OPT="INSTALL_BASE=/home/ucuber/perl5"; export PERL_MM_OPT;

export DB_HOST=mysql.devtest
export DB_NAME=lottohelden_dev5
export DB_USER=cuber
export DB_PASSWD=An3Emio1RohR
export MAIN_INI_FILE=$HOME/Workspace/projects/wtfoxtrot/main.ini

export XDG_RUNTIME_DIR="/run/user/$(id -u)"

# Alias definitions.
# You may want to put all your additions into a separate file like
# ~/.bash_aliases, instead of adding them here directly.
# See /usr/share/doc/bash-doc/examples in the bash-doc package.

if [ -f ~/.bash_aliases ]; then
    . ~/.bash_aliases
fi

# Functions definition.
search_for() {
  local start="$1"
  local pattern="$2"
  local filetype="${3:-pm}"
  grep -rnw "${start}" -e "${pattern}" --include="*.${filetype}" | cut -c 1-120
}

find_file() {
  local name="$1"
  local start="${2:-.}"
  find "$start" -type f -name "$name"
}

export PATH=$HOME/.local/bin:$PATH
source $HOME/python/bin/activate

. "$HOME/.atuin/bin/env"

[[ -f ~/.bash-preexec.sh ]] && source ~/.bash-preexec.sh
eval "$(atuin init bash)"
